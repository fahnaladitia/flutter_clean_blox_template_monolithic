// Mocks generated by Mockito 5.4.6 from annotations
// in feature_auth/test/data/repositories/auth_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:flutter_clean_blox_template/features/auth/data/sources/local/auth_local_data_source.dart'
    as _i3;
import 'package:flutter_clean_blox_template/features/auth/data/sources/local/entities/auth_entity.dart'
    as _i2;
import 'package:flutter_clean_blox_template/features/auth/data/sources/remote/auth_remote_data_source.dart'
    as _i5;
import 'package:flutter_clean_blox_template/features/auth/data/sources/remote/dtos/req/refresh_token_request.dart'
    as _i8;
import 'package:flutter_clean_blox_template/features/auth/data/sources/remote/dtos/req/sign_in_request.dart'
    as _i6;
import 'package:flutter_clean_blox_template/features/auth/data/sources/remote/dtos/req/sign_up_request.dart'
    as _i7;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i9;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAuthEntity_0 extends _i1.SmartFake implements _i2.AuthEntity {
  _FakeAuthEntity_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [AuthLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthLocalDataSource extends _i1.Mock
    implements _i3.AuthLocalDataSource {
  MockAuthLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<void> saveAuth(_i2.AuthEntity? entity) =>
      (super.noSuchMethod(
            Invocation.method(#saveAuth, [entity]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<String?> getToken() =>
      (super.noSuchMethod(
            Invocation.method(#getToken, []),
            returnValue: _i4.Future<String?>.value(),
          )
          as _i4.Future<String?>);

  @override
  _i4.Future<String?> getRefreshToken() =>
      (super.noSuchMethod(
            Invocation.method(#getRefreshToken, []),
            returnValue: _i4.Future<String?>.value(),
          )
          as _i4.Future<String?>);

  @override
  _i4.Future<String?> getUserId() =>
      (super.noSuchMethod(
            Invocation.method(#getUserId, []),
            returnValue: _i4.Future<String?>.value(),
          )
          as _i4.Future<String?>);

  @override
  _i4.Future<_i2.AuthEntity?> getAuth() =>
      (super.noSuchMethod(
            Invocation.method(#getAuth, []),
            returnValue: _i4.Future<_i2.AuthEntity?>.value(),
          )
          as _i4.Future<_i2.AuthEntity?>);

  @override
  _i4.Future<bool> isAuthenticated() =>
      (super.noSuchMethod(
            Invocation.method(#isAuthenticated, []),
            returnValue: _i4.Future<bool>.value(false),
          )
          as _i4.Future<bool>);

  @override
  _i4.Future<void> clear() =>
      (super.noSuchMethod(
            Invocation.method(#clear, []),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> updateAccessToken(String? accessToken) =>
      (super.noSuchMethod(
            Invocation.method(#updateAccessToken, [accessToken]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);
}

/// A class which mocks [AuthRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRemoteDataSource extends _i1.Mock
    implements _i5.AuthRemoteDataSource {
  MockAuthRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.AuthEntity> signIn(_i6.SignInRequest? request) =>
      (super.noSuchMethod(
            Invocation.method(#signIn, [request]),
            returnValue: _i4.Future<_i2.AuthEntity>.value(
              _FakeAuthEntity_0(this, Invocation.method(#signIn, [request])),
            ),
          )
          as _i4.Future<_i2.AuthEntity>);

  @override
  _i4.Future<_i2.AuthEntity> signUp(_i7.SignUpRequest? request) =>
      (super.noSuchMethod(
            Invocation.method(#signUp, [request]),
            returnValue: _i4.Future<_i2.AuthEntity>.value(
              _FakeAuthEntity_0(this, Invocation.method(#signUp, [request])),
            ),
          )
          as _i4.Future<_i2.AuthEntity>);

  @override
  _i4.Future<String> refreshAccessToken(_i8.RefreshTokenRequest? request) =>
      (super.noSuchMethod(
            Invocation.method(#refreshAccessToken, [request]),
            returnValue: _i4.Future<String>.value(
              _i9.dummyValue<String>(
                this,
                Invocation.method(#refreshAccessToken, [request]),
              ),
            ),
          )
          as _i4.Future<String>);
}
